import numpy as np


def haar_transform(input_vector):
    N = len(input_vector)
    H = np.zeros((N, N))

    # Generate the Haar matrix
    for k in range(N - 1):
        p = int(np.log2(N) - np.log2(k + 1))
        q = k % (2 ** p)
        for v in range(N):
            z = v / N
            if z >= (q - 1) / 2 ** p and z < (q - 0.5) / 2 ** p:
                H[k + 1, v] = 2 ** (p / 2)
            elif z >= (q - 0.5) / 2 ** p and z < q / 2 ** p:
                H[k + 1, v] = -2 ** (p / 2)

    # Apply the Haar matrix to the input vector
    output_vector = np.dot(H, input_vector)
    return output_vector


# Example usage
input_vector = np.array([2, 3 , 4, 5])
output_vector = haar_transform(input_vector)
print(output_vector)
